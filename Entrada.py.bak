#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.7 (standalone edition) on Wed Nov 27 21:05:25 2013
#

import wx
import funciones as f
# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class Principal(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Principal.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.estatusbar = self.CreateStatusBar(1, 0)
        self.bitmap_1 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("12.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_2 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("Inicio_sesion.gif", wx.BITMAP_TYPE_ANY))
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("Usuario:"))
        self.txtUsuario = wx.TextCtrl(self, wx.ID_ANY, "")
        self.bitmap_3 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("9152064-boton-de-nombre-de-usuario-y-contrasena-ademas-de-inicio-de-sesion-en-un-candado-para-acceso-seguro-.jpg", wx.BITMAP_TYPE_ANY))
        self.label_1_copy = wx.StaticText(self, wx.ID_ANY, _("Clave:"))
        self.txtClave = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PASSWORD)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("Aceptar"))
        self.button_2 = wx.Button(self, wx.ID_ANY, _("Salir"))

        self.__set_properties()
        self.txtUsuario.SetValidator(ContieneDatos())#activa la validacion
        self.txtClave.SetValidator(ContieneDatos())#activa la validacion
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnEntrar, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnLimpiar, self.button_2)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Principal.__set_properties
        self.SetTitle(_("Entrada"))
        self.estatusbar.SetStatusWidths([-1])
        # statusbar fields
        estatusbar_fields = [_(u"Sistema de Simulación de Cinemática")]
        for i in range(len(estatusbar_fields)):
            self.estatusbar.SetStatusText(estatusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Principal.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(6, 4, 0, 0)
        grid_sizer_2 = wx.GridSizer(1, 2, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.bitmap_1, 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.bitmap_2, 0, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.txtUsuario, 0, wx.EXPAND, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add(self.bitmap_3, 0, 0, 0)
        grid_sizer_1.Add(self.label_1_copy, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.txtClave, 0, wx.EXPAND, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_2.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        grid_sizer_2.Add(self.button_2, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.AddGrowableCol(2)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    

    def OnEntrar(self, event):  # wxGlade: Principal.<event_handler>
        if self.Validate():
            f.Bitacora(self)
            f.Entrada(self)
        #self.Close()
    def OnLimpiar(self, event):  # wxGlade: Principal.<event_handler>
        self.Close()

# end of class Principal
class ContieneDatos(wx.PyValidator):
    def __init__(self):
        wx.PyValidator.__init__(self)

    def Clone(self):
        """
        Note que todo validador debe implementar
        # el método Clone().
        """
        return ContieneDatos()

    def Validate(self, win):
        textCtrl = self.GetWindow()
        text = textCtrl.GetValue()
        if len(text) == 0:
            wx.MessageBox("Este campo debe contener algún texto!",
                          "Error")
            textCtrl.SetBackgroundColour("red")
            textCtrl.SetFocus()
            textCtrl.Refresh()
            return False
        else:
            textCtrl.SetBackgroundColour(
                               wx.SystemSettings_GetColour(
                               wx.SYS_COLOUR_WINDOW))
            textCtrl.Refresh()
            return True

    def TransferToWindow(self):
        return True

    def TransferFromWindow(self):
        return True
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.App()
    #wx.InitAllImageHandlers()
    Entrada = Principal(None, wx.ID_ANY, "")
    app.SetTopWindow(Entrada)
    Entrada.Show()
    app.MainLoop()
