#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.7 (standalone edition) on Tue Jan 14 08:29:53 2014
#

import wx
import os

import funciones as f
import GuardarAlumno as G
import GuardarUsuario as GU
import BuscarAlumno as BA
import BuscarUsuario as BU
import EliminarAlumno as EA
import EliminarUsuario as EU
import ModificarAlumno as MA
import BloquearUsuario as BO
import DesbloquearUsuario as DU
import CaidaLibre as CL
import CaidaLibreE as CLE
import TiroHorizontal as TH
import TiroVertical as TV
import TiroParabolico as TP
import Friccion as Fr
import pdf as p
import Entrada as EN
import Informacion as In
import Contact as C
# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class Principal(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Principal.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.vntPpal_BarraEstado = self.CreateStatusBar(1, 0)
        self.tree = wx.TreeCtrl(self, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_LINES_AT_ROOT | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
        self.bitmap_button_1 = wx.BitmapButton(self, wx.ID_ANY, wx.Bitmap("Banner1.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_1 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("12.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_button_3 = wx.BitmapButton(self, wx.ID_ANY, wx.Bitmap("salir1.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_button_4 = wx.BitmapButton(self, wx.ID_ANY, wx.Bitmap("informacion1.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_button_5 = wx.BitmapButton(self, wx.ID_ANY, wx.Bitmap("soporte_tecnico_icono1.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_button_2 = wx.BitmapButton(self, wx.ID_ANY, wx.Bitmap("manual1.png", wx.BITMAP_TYPE_ANY))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TREE_SEL_CHANGED, self.OnSelChanged, self.tree)
        self.Bind(wx.EVT_BUTTON, self.EnSalir, self.bitmap_button_3)
        self.Bind(wx.EVT_BUTTON, self.OnInfoSys, self.bitmap_button_4)
        self.Bind(wx.EVT_BUTTON, self.OnContact, self.bitmap_button_5)
        self.Bind(wx.EVT_BUTTON, self.OnManual, self.bitmap_button_2)
        # end wxGlade
        #LLenar el TreeCtrl
        root = self.tree.AddRoot('Inicio')
        Re = self.tree.AppendItem(root, 'Registros')
        Op=self.tree.AppendItem(root,'Operaciones')
        Si = self.tree.AppendItem(root, 'Simulacion')
        Repor=self.tree.AppendItem(root,'Reportes')
        

        Al = self.tree.AppendItem(Re, 'Alumnos')
        Us=self.tree.AppendItem(Re,'Usuarios')
        Blo=self.tree.AppendItem(Op,'Bloquear Usuarios')
        Des=self.tree.AppendItem(Op,'Desbloquear Usuarios')
        Bi=self.tree.AppendItem(Repor,'Bitacora')
        
        
        self.tree.AppendItem(Al, 'Buscar Alumno')
        self.tree.AppendItem(Al, 'Eliminar Alumno')
        self.tree.AppendItem(Al, 'Guardar Alumno')
        self.tree.AppendItem(Al, 'Modificar Alumno')

        self.tree.AppendItem(Us, 'Buscar Usuario')
        self.tree.AppendItem(Us, 'Eliminar Usuario')
        self.tree.AppendItem(Us, 'Guardar Usuario')
        self.tree.AppendItem(Us, 'Modificar Usuario')
        
        self.tree.AppendItem(Si, 'Caida Libre')
        self.tree.AppendItem(Si, 'Caida Libre Energia')
        self.tree.AppendItem(Si, 'Tiro Parabolico')
        self.tree.AppendItem(Si, 'Tiro Vertical Hacia Arriba')
        self.tree.AppendItem(Si, 'Tiro Horizontal')
        self.tree.AppendItem(Si, 'Friccion')

        self.tree.AppendItem(Bi, 'Bitacora')
        self.tree.AppendItem(Bi, 'Bitacora por Ano')
        self.tree.AppendItem(Bi, 'Bitacora por Mes')
        self.tree.AppendItem(Bi, 'Bitacora por Dia')
        self.tree.AppendItem(Bi, 'Reporte Usuarios')
        self.tree.Bind(wx.EVT_TREE_SEL_CHANGED,self.OnSelChanged,id=1)
    def __set_properties(self):
        # begin wxGlade: Principal.__set_properties
        self.SetTitle(_("Principal Administrador"))
        self.SetSize((702, 500))
        self.vntPpal_BarraEstado.SetStatusWidths([-1])
        # statusbar fields
        vntPpal_BarraEstado_fields = [_("Listo")]
        for i in range(len(vntPpal_BarraEstado_fields)):
            self.vntPpal_BarraEstado.SetStatusText(vntPpal_BarraEstado_fields[i], i)
        self.tree.SetMinSize((180,100))
        self.bitmap_button_1.SetSize(self.bitmap_button_1.GetBestSize())
        self.bitmap_button_3.SetSize(self.bitmap_button_3.GetBestSize())
        self.bitmap_button_4.SetSize(self.bitmap_button_4.GetBestSize())
        self.bitmap_button_5.SetSize(self.bitmap_button_5.GetBestSize())
        self.bitmap_button_2.SetSize(self.bitmap_button_2.GetBestSize())
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Principal.__do_layout
        grid_sizer_1 = wx.FlexGridSizer(1, 3, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(2, 1, 0, 0)
        grid_sizer_3 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_4 = wx.FlexGridSizer(6, 1, 0, 0)
        grid_sizer_1.Add(self.tree, 1, wx.EXPAND, 0)
        grid_sizer_2.Add(self.bitmap_button_1, 0, 0, 0)
        grid_sizer_3.Add(self.bitmap_1, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.bitmap_button_3, 0, 0, 0)
        grid_sizer_4.Add(self.bitmap_button_4, 0, 0, 0)
        grid_sizer_4.Add(self.bitmap_button_5, 0, 0, 0)
        grid_sizer_4.Add(self.bitmap_button_2, 0, 0, 0)
        grid_sizer_3.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_3.AddGrowableRow(0)
        grid_sizer_3.AddGrowableCol(0)
        grid_sizer_2.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_2.AddGrowableRow(1)
        grid_sizer_2.AddGrowableCol(0)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.AddGrowableRow(0)
        grid_sizer_1.AddGrowableCol(1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnSelChanged(self, event):  # wxGlade: Principal.<event_handler>
        item =  event.GetItem()
        #new=self.display.SetLabel(self.tree.GetItemText(item))
        if self.tree.GetItemText(item)== "Buscar Alumno":
            Ventana=BA.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Guardar Alumno":
            Ventana=G.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Eliminar Alumno":
            Ventana=EA.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Modificar Alumno":
            Ventana=MA.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Buscar Usuario":
            Ventana=BU.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Guardar Usuario":
            Ventana=GU.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Eliminar Usuario":
            Ventana=EU.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Bloquear Usuarios":
            Ventana=BO.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Desbloquear Usuarios":
            Ventana=DU.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Caida Libre":
            Ventana=CL.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Caida Libre Energia":
            Ventana=CLE.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Tiro Vertical Hacia Arriba":
            Ventana=TV.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Tiro Parabolico":
            Ventana=TP.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Tiro Horizontal":
            Ventana=TH.Principal(self)
            Ventana.Show()
            self.Hide()
        if self.tree.GetItemText(item)== "Friccion":
            Ventana=Fr.principal(self)
            Ventana.Show()
            self.Hide()    
        if self.tree.GetItemText(item)== "Bitacora":
            p.pdf(self)
            
        if self.tree.GetItemText(item)== "Bitacora por Ano":
            f.ReporUA(self)
        if self.tree.GetItemText(item)== "Bitacora por Mes":
            f.ReporUM(self)
        if self.tree.GetItemText(item)== "Bitacora por Dia":
            f.ReporUD(self)
        if self.tree.GetItemText(item)== "Reporte Usuarios":
            p.ReporUsuario(self)
            
    def EnSalir(self, event):  # wxGlade: Principal.<event_handler>
        dlg = wx.MessageDialog(None, '¿Desea Salir?',
                           'Diálogo de Mensage', wx.OK|wx.CANCEL|
                            wx.ICON_QUESTION)
        #dlg.ShowModal()
        

        if dlg.ShowModal()==wx.ID_OK:
            Ventana=EN.Principal(self)
            Ventana.Show()
            self.Hide()
        dlg.Destroy() 

    def OnInfoSys(self, event):  # wxGlade: Principal.<event_handler>
        Ventana=In.Principal(self)
        Ventana.Show()

    def OnContact(self, event):  # wxGlade: Principal.<event_handler>
        Ventana=C.Principal(self)
        Ventana.Show()

    def OnCorreo(self, event):  # wxGlade: Principal.<event_handler>
        Archivo=os.popen("ManualAdmin.pdf")
        
    def OnNum(self, event):  # wxGlade: Principal.<event_handler>
        print "Event handler 'OnNum' not implemented!"
        event.Skip()

    def OnCambiarU(self, event):  # wxGlade: Principal.<event_handler>
        print "Event handler 'OnCambiarU' not implemented!"
        event.Skip()

    def OnManual(self, event):  # wxGlade: Principal.<event_handler>
        Archivo=os.popen("ManualAdmin.pdf")
# end of class Principal
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.App()
    #wx.InitAllImageHandlers()
    frame_1 = Principal(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
